/*
 * generated by Xtext 2.17.1
 */
grammar InternalQms;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.qms.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.qms.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.qms.services.QmsGrammarAccess;

}

@parser::members {

 	private QmsGrammarAccess grammarAccess;

    public InternalQmsParser(TokenStream input, QmsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected QmsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getModelAccess().getRepositoryParserRuleCall_0());
		}
		this_Repository_0=ruleRepository
		{
			$current = $this_Repository_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModelAccess().getRepositoryNodeParserRuleCall_1());
		}
		this_RepositoryNode_1=ruleRepositoryNode
		{
			$current = $this_RepositoryNode_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRepository
entryRuleRepository returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepositoryRule()); }
	iv_ruleRepository=ruleRepository
	{ $current=$iv_ruleRepository.current; }
	EOF;

// Rule Repository
ruleRepository returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='repository'
		{
			newLeafNode(otherlv_0, grammarAccess.getRepositoryAccess().getRepositoryKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRepositoryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRepositoryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getRepositoryAccess().getTypeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepositoryAccess().getTypeRepositoryTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleRepositoryType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepositoryRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.qms.Qms.RepositoryType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRepositoryAccess().getRootRepositoryNodeParserRuleCall_4_0());
				}
				lv_root_4_0=ruleRepositoryNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepositoryRule());
					}
					set(
						$current,
						"root",
						lv_root_4_0,
						"org.xtext.example.qms.Qms.RepositoryNode");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRepositoryNode
entryRuleRepositoryNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepositoryNodeRule()); }
	iv_ruleRepositoryNode=ruleRepositoryNode
	{ $current=$iv_ruleRepositoryNode.current; }
	EOF;

// Rule RepositoryNode
ruleRepositoryNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRepositoryNodeAccess().getRequirementNodeParserRuleCall_0());
		}
		this_RequirementNode_0=ruleRequirementNode
		{
			$current = $this_RequirementNode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRepositoryNodeAccess().getEvidenceNodeParserRuleCall_1());
		}
		this_EvidenceNode_1=ruleEvidenceNode
		{
			$current = $this_EvidenceNode_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRepositoryNodeAccess().getBomNodeParserRuleCall_2());
		}
		this_BomNode_2=ruleBomNode
		{
			$current = $this_BomNode_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRequirementNode
entryRuleRequirementNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementNodeRule()); }
	iv_ruleRequirementNode=ruleRequirementNode
	{ $current=$iv_ruleRequirementNode.current; }
	EOF;

// Rule RequirementNode
ruleRequirementNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='req'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequirementNodeAccess().getReqKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRequirementNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequirementNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='was'
			{
				newLeafNode(otherlv_2, grammarAccess.getRequirementNodeAccess().getWasKeyword_2_0());
			}
			(
				(
					lv_formerName_3_0=RULE_ID
					{
						newLeafNode(lv_formerName_3_0, grammarAccess.getRequirementNodeAccess().getFormerNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRequirementNodeRule());
						}
						setWithLastConsumed(
							$current,
							"formerName",
							lv_formerName_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getRequirementNodeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_5='title'
			{
				newLeafNode(otherlv_5, grammarAccess.getRequirementNodeAccess().getTitleKeyword_4_0());
			}
			(
				(
					lv_title_6_0=RULE_STRING
					{
						newLeafNode(lv_title_6_0, grammarAccess.getRequirementNodeAccess().getTitleSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRequirementNodeRule());
						}
						setWithLastConsumed(
							$current,
							"title",
							lv_title_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRequirementNodeAccess().getBodyNodeBodyElementParserRuleCall_5_0());
				}
				lv_body_7_0=ruleNodeBodyElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequirementNodeRule());
					}
					add(
						$current,
						"body",
						lv_body_7_0,
						"org.xtext.example.qms.Qms.NodeBodyElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRequirementNodeAccess().getChildrenRequirementNodeParserRuleCall_6_0());
				}
				lv_children_8_0=ruleRequirementNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequirementNodeRule());
					}
					add(
						$current,
						"children",
						lv_children_8_0,
						"org.xtext.example.qms.Qms.RequirementNode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getRequirementNodeAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleBomNode
entryRuleBomNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBomNodeRule()); }
	iv_ruleBomNode=ruleBomNode
	{ $current=$iv_ruleBomNode.current; }
	EOF;

// Rule BomNode
ruleBomNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='bom'
		{
			newLeafNode(otherlv_0, grammarAccess.getBomNodeAccess().getBomKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBomNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBomNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBomNodeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='title'
			{
				newLeafNode(otherlv_3, grammarAccess.getBomNodeAccess().getTitleKeyword_3_0());
			}
			(
				(
					lv_title_4_0=RULE_STRING
					{
						newLeafNode(lv_title_4_0, grammarAccess.getBomNodeAccess().getTitleSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBomNodeRule());
						}
						setWithLastConsumed(
							$current,
							"title",
							lv_title_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBomNodeAccess().getBodyNodeBodyElementParserRuleCall_4_0());
				}
				lv_body_5_0=ruleNodeBodyElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBomNodeRule());
					}
					add(
						$current,
						"body",
						lv_body_5_0,
						"org.xtext.example.qms.Qms.NodeBodyElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='weight'
		{
			newLeafNode(otherlv_6, grammarAccess.getBomNodeAccess().getWeightKeyword_5());
		}
		(
			(
				lv_weight_7_0=RULE_INT
				{
					newLeafNode(lv_weight_7_0, grammarAccess.getBomNodeAccess().getWeightINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBomNodeRule());
					}
					setWithLastConsumed(
						$current,
						"weight",
						lv_weight_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBomNodeAccess().getChildrenBomNodeParserRuleCall_7_0());
				}
				lv_children_8_0=ruleBomNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBomNodeRule());
					}
					add(
						$current,
						"children",
						lv_children_8_0,
						"org.xtext.example.qms.Qms.BomNode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getBomNodeAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEvidenceNode
entryRuleEvidenceNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvidenceNodeRule()); }
	iv_ruleEvidenceNode=ruleEvidenceNode
	{ $current=$iv_ruleEvidenceNode.current; }
	EOF;

// Rule EvidenceNode
ruleEvidenceNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='evi'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvidenceNodeAccess().getEviKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEvidenceNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvidenceNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEvidenceNodeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='title'
			{
				newLeafNode(otherlv_3, grammarAccess.getEvidenceNodeAccess().getTitleKeyword_3_0());
			}
			(
				(
					lv_title_4_0=RULE_STRING
					{
						newLeafNode(lv_title_4_0, grammarAccess.getEvidenceNodeAccess().getTitleSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvidenceNodeRule());
						}
						setWithLastConsumed(
							$current,
							"title",
							lv_title_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEvidenceNodeAccess().getBodyNodeBodyElementParserRuleCall_4_0());
				}
				lv_body_5_0=ruleNodeBodyElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvidenceNodeRule());
					}
					add(
						$current,
						"body",
						lv_body_5_0,
						"org.xtext.example.qms.Qms.NodeBodyElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEvidenceNodeAccess().getChildrenEvidenceNodeParserRuleCall_5_0());
				}
				lv_children_6_0=ruleEvidenceNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvidenceNodeRule());
					}
					add(
						$current,
						"children",
						lv_children_6_0,
						"org.xtext.example.qms.Qms.EvidenceNode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getEvidenceNodeAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleNodeBodyElement
entryRuleNodeBodyElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeBodyElementRule()); }
	iv_ruleNodeBodyElement=ruleNodeBodyElement
	{ $current=$iv_ruleNodeBodyElement.current; }
	EOF;

// Rule NodeBodyElement
ruleNodeBodyElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNodeBodyElementAccess().getTextParserRuleCall_0());
		}
		this_Text_0=ruleText
		{
			$current = $this_Text_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNodeBodyElementAccess().getNodeReferenceParserRuleCall_1());
		}
		this_NodeReference_1=ruleNodeReference
		{
			$current = $this_NodeReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='text'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextAccess().getTextKeyword_0());
		}
		(
			(
				lv_text_1_0=RULE_STRING
				{
					newLeafNode(lv_text_1_0, grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleNodeReference
entryRuleNodeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeReferenceRule()); }
	iv_ruleNodeReference=ruleNodeReference
	{ $current=$iv_ruleNodeReference.current; }
	EOF;

// Rule NodeReference
ruleNodeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeReferenceAccess().getRefKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getNodeReferenceAccess().getRefRepositoryNodeCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule RepositoryType
ruleRepositoryType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='requirement'
			{
				$current = grammarAccess.getRepositoryTypeAccess().getREQUIREMENTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRepositoryTypeAccess().getREQUIREMENTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='evidence'
			{
				$current = grammarAccess.getRepositoryTypeAccess().getEVIDENCEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRepositoryTypeAccess().getEVIDENCEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='qms'
			{
				$current = grammarAccess.getRepositoryTypeAccess().getQMSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRepositoryTypeAccess().getQMSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='bom'
			{
				$current = grammarAccess.getRepositoryTypeAccess().getBOMEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRepositoryTypeAccess().getBOMEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
