/**
 * generated by Xtext 2.17.1
 */
package org.xtext.example.qms.qms;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Repository Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.example.qms.qms.QmsPackage#getRepositoryType()
 * @model
 * @generated
 */
public enum RepositoryType implements Enumerator
{
  /**
   * The '<em><b>REQUIREMENT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REQUIREMENT_VALUE
   * @generated
   * @ordered
   */
  REQUIREMENT(0, "REQUIREMENT", "requirement"),

  /**
   * The '<em><b>EVIDENCE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EVIDENCE_VALUE
   * @generated
   * @ordered
   */
  EVIDENCE(1, "EVIDENCE", "evidence"),

  /**
   * The '<em><b>QMS</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #QMS_VALUE
   * @generated
   * @ordered
   */
  QMS(2, "QMS", "qms"),

  /**
   * The '<em><b>BOM</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BOM_VALUE
   * @generated
   * @ordered
   */
  BOM(3, "BOM", "bom");

  /**
   * The '<em><b>REQUIREMENT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REQUIREMENT
   * @model literal="requirement"
   * @generated
   * @ordered
   */
  public static final int REQUIREMENT_VALUE = 0;

  /**
   * The '<em><b>EVIDENCE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EVIDENCE
   * @model literal="evidence"
   * @generated
   * @ordered
   */
  public static final int EVIDENCE_VALUE = 1;

  /**
   * The '<em><b>QMS</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #QMS
   * @model literal="qms"
   * @generated
   * @ordered
   */
  public static final int QMS_VALUE = 2;

  /**
   * The '<em><b>BOM</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BOM
   * @model literal="bom"
   * @generated
   * @ordered
   */
  public static final int BOM_VALUE = 3;

  /**
   * An array of all the '<em><b>Repository Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final RepositoryType[] VALUES_ARRAY =
    new RepositoryType[]
    {
      REQUIREMENT,
      EVIDENCE,
      QMS,
      BOM,
    };

  /**
   * A public read-only list of all the '<em><b>Repository Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<RepositoryType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Repository Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static RepositoryType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      RepositoryType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Repository Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static RepositoryType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      RepositoryType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Repository Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static RepositoryType get(int value)
  {
    switch (value)
    {
      case REQUIREMENT_VALUE: return REQUIREMENT;
      case EVIDENCE_VALUE: return EVIDENCE;
      case QMS_VALUE: return QMS;
      case BOM_VALUE: return BOM;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private RepositoryType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //RepositoryType
