/*
 * generated by Xtext 2.17.1
 */
grammar InternalQms;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.qms.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.qms.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.qms.services.QmsGrammarAccess;

}
@parser::members {
	private QmsGrammarAccess grammarAccess;

	public void setGrammarAccess(QmsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepository
entryRuleRepository
:
{ before(grammarAccess.getRepositoryRule()); }
	 ruleRepository
{ after(grammarAccess.getRepositoryRule()); } 
	 EOF 
;

// Rule Repository
ruleRepository 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepositoryAccess().getGroup()); }
		(rule__Repository__Group__0)
		{ after(grammarAccess.getRepositoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepositoryNode
entryRuleRepositoryNode
:
{ before(grammarAccess.getRepositoryNodeRule()); }
	 ruleRepositoryNode
{ after(grammarAccess.getRepositoryNodeRule()); } 
	 EOF 
;

// Rule RepositoryNode
ruleRepositoryNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepositoryNodeAccess().getAlternatives()); }
		(rule__RepositoryNode__Alternatives)
		{ after(grammarAccess.getRepositoryNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequirementNode
entryRuleRequirementNode
:
{ before(grammarAccess.getRequirementNodeRule()); }
	 ruleRequirementNode
{ after(grammarAccess.getRequirementNodeRule()); } 
	 EOF 
;

// Rule RequirementNode
ruleRequirementNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequirementNodeAccess().getGroup()); }
		(rule__RequirementNode__Group__0)
		{ after(grammarAccess.getRequirementNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBomNode
entryRuleBomNode
:
{ before(grammarAccess.getBomNodeRule()); }
	 ruleBomNode
{ after(grammarAccess.getBomNodeRule()); } 
	 EOF 
;

// Rule BomNode
ruleBomNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBomNodeAccess().getGroup()); }
		(rule__BomNode__Group__0)
		{ after(grammarAccess.getBomNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvidenceNode
entryRuleEvidenceNode
:
{ before(grammarAccess.getEvidenceNodeRule()); }
	 ruleEvidenceNode
{ after(grammarAccess.getEvidenceNodeRule()); } 
	 EOF 
;

// Rule EvidenceNode
ruleEvidenceNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvidenceNodeAccess().getGroup()); }
		(rule__EvidenceNode__Group__0)
		{ after(grammarAccess.getEvidenceNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeBodyElement
entryRuleNodeBodyElement
:
{ before(grammarAccess.getNodeBodyElementRule()); }
	 ruleNodeBodyElement
{ after(grammarAccess.getNodeBodyElementRule()); } 
	 EOF 
;

// Rule NodeBodyElement
ruleNodeBodyElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeBodyElementAccess().getAlternatives()); }
		(rule__NodeBodyElement__Alternatives)
		{ after(grammarAccess.getNodeBodyElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeReference
entryRuleNodeReference
:
{ before(grammarAccess.getNodeReferenceRule()); }
	 ruleNodeReference
{ after(grammarAccess.getNodeReferenceRule()); } 
	 EOF 
;

// Rule NodeReference
ruleNodeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeReferenceAccess().getGroup()); }
		(rule__NodeReference__Group__0)
		{ after(grammarAccess.getNodeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RepositoryType
ruleRepositoryType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryTypeAccess().getAlternatives()); }
		(rule__RepositoryType__Alternatives)
		{ after(grammarAccess.getRepositoryTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRepositoryParserRuleCall_0()); }
		ruleRepository
		{ after(grammarAccess.getModelAccess().getRepositoryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getRepositoryNodeParserRuleCall_1()); }
		ruleRepositoryNode
		{ after(grammarAccess.getModelAccess().getRepositoryNodeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryNode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryNodeAccess().getRequirementNodeParserRuleCall_0()); }
		ruleRequirementNode
		{ after(grammarAccess.getRepositoryNodeAccess().getRequirementNodeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRepositoryNodeAccess().getEvidenceNodeParserRuleCall_1()); }
		ruleEvidenceNode
		{ after(grammarAccess.getRepositoryNodeAccess().getEvidenceNodeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRepositoryNodeAccess().getBomNodeParserRuleCall_2()); }
		ruleBomNode
		{ after(grammarAccess.getRepositoryNodeAccess().getBomNodeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeBodyElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeBodyElementAccess().getTextParserRuleCall_0()); }
		ruleText
		{ after(grammarAccess.getNodeBodyElementAccess().getTextParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeBodyElementAccess().getNodeReferenceParserRuleCall_1()); }
		ruleNodeReference
		{ after(grammarAccess.getNodeBodyElementAccess().getNodeReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryTypeAccess().getREQUIREMENTEnumLiteralDeclaration_0()); }
		('requirement')
		{ after(grammarAccess.getRepositoryTypeAccess().getREQUIREMENTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRepositoryTypeAccess().getEVIDENCEEnumLiteralDeclaration_1()); }
		('evidence')
		{ after(grammarAccess.getRepositoryTypeAccess().getEVIDENCEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRepositoryTypeAccess().getQMSEnumLiteralDeclaration_2()); }
		('qms')
		{ after(grammarAccess.getRepositoryTypeAccess().getQMSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRepositoryTypeAccess().getBOMEnumLiteralDeclaration_3()); }
		('bom')
		{ after(grammarAccess.getRepositoryTypeAccess().getBOMEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group__0__Impl
	rule__Repository__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getRepositoryKeyword_0()); }
	'repository'
	{ after(grammarAccess.getRepositoryAccess().getRepositoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group__1__Impl
	rule__Repository__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getNameAssignment_1()); }
	(rule__Repository__NameAssignment_1)
	{ after(grammarAccess.getRepositoryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group__2__Impl
	rule__Repository__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getTypeKeyword_2()); }
	'type'
	{ after(grammarAccess.getRepositoryAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group__3__Impl
	rule__Repository__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getTypeAssignment_3()); }
	(rule__Repository__TypeAssignment_3)
	{ after(grammarAccess.getRepositoryAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repository__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryAccess().getRootAssignment_4()); }
	(rule__Repository__RootAssignment_4)
	{ after(grammarAccess.getRepositoryAccess().getRootAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group__0__Impl
	rule__RequirementNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getReqKeyword_0()); }
	'req'
	{ after(grammarAccess.getRequirementNodeAccess().getReqKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group__1__Impl
	rule__RequirementNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getNameAssignment_1()); }
	(rule__RequirementNode__NameAssignment_1)
	{ after(grammarAccess.getRequirementNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group__2__Impl
	rule__RequirementNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getGroup_2()); }
	(rule__RequirementNode__Group_2__0)?
	{ after(grammarAccess.getRequirementNodeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group__3__Impl
	rule__RequirementNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getRequirementNodeAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group__4__Impl
	rule__RequirementNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getGroup_4()); }
	(rule__RequirementNode__Group_4__0)?
	{ after(grammarAccess.getRequirementNodeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group__5__Impl
	rule__RequirementNode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getBodyAssignment_5()); }
	(rule__RequirementNode__BodyAssignment_5)*
	{ after(grammarAccess.getRequirementNodeAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group__6__Impl
	rule__RequirementNode__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getChildrenAssignment_6()); }
	(rule__RequirementNode__ChildrenAssignment_6)*
	{ after(grammarAccess.getRequirementNodeAccess().getChildrenAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getRequirementNodeAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementNode__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group_2__0__Impl
	rule__RequirementNode__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getWasKeyword_2_0()); }
	'was'
	{ after(grammarAccess.getRequirementNodeAccess().getWasKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getFormerNameAssignment_2_1()); }
	(rule__RequirementNode__FormerNameAssignment_2_1)
	{ after(grammarAccess.getRequirementNodeAccess().getFormerNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementNode__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group_4__0__Impl
	rule__RequirementNode__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getTitleKeyword_4_0()); }
	'title'
	{ after(grammarAccess.getRequirementNodeAccess().getTitleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementNode__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementNodeAccess().getTitleAssignment_4_1()); }
	(rule__RequirementNode__TitleAssignment_4_1)
	{ after(grammarAccess.getRequirementNodeAccess().getTitleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BomNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group__0__Impl
	rule__BomNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getBomKeyword_0()); }
	'bom'
	{ after(grammarAccess.getBomNodeAccess().getBomKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group__1__Impl
	rule__BomNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getNameAssignment_1()); }
	(rule__BomNode__NameAssignment_1)
	{ after(grammarAccess.getBomNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group__2__Impl
	rule__BomNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBomNodeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group__3__Impl
	rule__BomNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getGroup_3()); }
	(rule__BomNode__Group_3__0)?
	{ after(grammarAccess.getBomNodeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group__4__Impl
	rule__BomNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getBodyAssignment_4()); }
	(rule__BomNode__BodyAssignment_4)*
	{ after(grammarAccess.getBomNodeAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group__5__Impl
	rule__BomNode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getWeightKeyword_5()); }
	'weight'
	{ after(grammarAccess.getBomNodeAccess().getWeightKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group__6__Impl
	rule__BomNode__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getWeightAssignment_6()); }
	(rule__BomNode__WeightAssignment_6)
	{ after(grammarAccess.getBomNodeAccess().getWeightAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group__7__Impl
	rule__BomNode__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getChildrenAssignment_7()); }
	(rule__BomNode__ChildrenAssignment_7)*
	{ after(grammarAccess.getBomNodeAccess().getChildrenAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getBomNodeAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BomNode__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group_3__0__Impl
	rule__BomNode__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getTitleKeyword_3_0()); }
	'title'
	{ after(grammarAccess.getBomNodeAccess().getTitleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BomNode__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBomNodeAccess().getTitleAssignment_3_1()); }
	(rule__BomNode__TitleAssignment_3_1)
	{ after(grammarAccess.getBomNodeAccess().getTitleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvidenceNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvidenceNode__Group__0__Impl
	rule__EvidenceNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvidenceNodeAccess().getEviKeyword_0()); }
	'evi'
	{ after(grammarAccess.getEvidenceNodeAccess().getEviKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvidenceNode__Group__1__Impl
	rule__EvidenceNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvidenceNodeAccess().getNameAssignment_1()); }
	(rule__EvidenceNode__NameAssignment_1)
	{ after(grammarAccess.getEvidenceNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvidenceNode__Group__2__Impl
	rule__EvidenceNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvidenceNodeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEvidenceNodeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvidenceNode__Group__3__Impl
	rule__EvidenceNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvidenceNodeAccess().getGroup_3()); }
	(rule__EvidenceNode__Group_3__0)?
	{ after(grammarAccess.getEvidenceNodeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvidenceNode__Group__4__Impl
	rule__EvidenceNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvidenceNodeAccess().getBodyAssignment_4()); }
	(rule__EvidenceNode__BodyAssignment_4)*
	{ after(grammarAccess.getEvidenceNodeAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvidenceNode__Group__5__Impl
	rule__EvidenceNode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvidenceNodeAccess().getChildrenAssignment_5()); }
	(rule__EvidenceNode__ChildrenAssignment_5)*
	{ after(grammarAccess.getEvidenceNodeAccess().getChildrenAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvidenceNode__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvidenceNodeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getEvidenceNodeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvidenceNode__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvidenceNode__Group_3__0__Impl
	rule__EvidenceNode__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvidenceNodeAccess().getTitleKeyword_3_0()); }
	'title'
	{ after(grammarAccess.getEvidenceNodeAccess().getTitleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvidenceNode__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvidenceNodeAccess().getTitleAssignment_3_1()); }
	(rule__EvidenceNode__TitleAssignment_3_1)
	{ after(grammarAccess.getEvidenceNodeAccess().getTitleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextKeyword_0()); }
	'text'
	{ after(grammarAccess.getTextAccess().getTextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextAssignment_1()); }
	(rule__Text__TextAssignment_1)
	{ after(grammarAccess.getTextAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeReference__Group__0__Impl
	rule__NodeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeReferenceAccess().getRefKeyword_0()); }
	'ref'
	{ after(grammarAccess.getNodeReferenceAccess().getRefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeReferenceAccess().getRefAssignment_1()); }
	(rule__NodeReference__RefAssignment_1)
	{ after(grammarAccess.getNodeReferenceAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Repository__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRepositoryAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryAccess().getTypeRepositoryTypeEnumRuleCall_3_0()); }
		ruleRepositoryType
		{ after(grammarAccess.getRepositoryAccess().getTypeRepositoryTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repository__RootAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryAccess().getRootRepositoryNodeParserRuleCall_4_0()); }
		ruleRepositoryNode
		{ after(grammarAccess.getRepositoryAccess().getRootRepositoryNodeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementNodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRequirementNodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__FormerNameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementNodeAccess().getFormerNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRequirementNodeAccess().getFormerNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__TitleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementNodeAccess().getTitleSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRequirementNodeAccess().getTitleSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementNodeAccess().getBodyNodeBodyElementParserRuleCall_5_0()); }
		ruleNodeBodyElement
		{ after(grammarAccess.getRequirementNodeAccess().getBodyNodeBodyElementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementNode__ChildrenAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementNodeAccess().getChildrenRequirementNodeParserRuleCall_6_0()); }
		ruleRequirementNode
		{ after(grammarAccess.getRequirementNodeAccess().getChildrenRequirementNodeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBomNodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBomNodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__TitleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBomNodeAccess().getTitleSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getBomNodeAccess().getTitleSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBomNodeAccess().getBodyNodeBodyElementParserRuleCall_4_0()); }
		ruleNodeBodyElement
		{ after(grammarAccess.getBomNodeAccess().getBodyNodeBodyElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__WeightAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBomNodeAccess().getWeightINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getBomNodeAccess().getWeightINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BomNode__ChildrenAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBomNodeAccess().getChildrenBomNodeParserRuleCall_7_0()); }
		ruleBomNode
		{ after(grammarAccess.getBomNodeAccess().getChildrenBomNodeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvidenceNodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEvidenceNodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__TitleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvidenceNodeAccess().getTitleSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEvidenceNodeAccess().getTitleSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvidenceNodeAccess().getBodyNodeBodyElementParserRuleCall_4_0()); }
		ruleNodeBodyElement
		{ after(grammarAccess.getEvidenceNodeAccess().getBodyNodeBodyElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceNode__ChildrenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvidenceNodeAccess().getChildrenEvidenceNodeParserRuleCall_5_0()); }
		ruleEvidenceNode
		{ after(grammarAccess.getEvidenceNodeAccess().getChildrenEvidenceNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeReference__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeReferenceAccess().getRefRepositoryNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getNodeReferenceAccess().getRefRepositoryNodeQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getNodeReferenceAccess().getRefRepositoryNodeQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getNodeReferenceAccess().getRefRepositoryNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
